apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // replace with the current version of the Android plugin
        classpath 'com.android.tools.build:gradle:1.1.3'
        // the latest version of the android-apt plugin
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

apt {
    arguments {
        resourcePackageName android.defaultConfig.applicationId
        androidManifestFile variant.outputs[0].processResources.manifestFile

        // If you're using Android NBS flavors you should use the following line instead of hard-coded packageName
        // resourcePackageName android.defaultConfig.packageName

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
    }
}

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "vn.dev.Skope"
        minSdkVersion 10
        targetSdkVersion project.ANDROID_BUILD_TARGET_SDK_VERSION
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                appendVersionNameVersionCode(variant, defaultConfig)
            }
        }
    }
    lintOptions {
        abortOnError false
    }
}

def appendVersionNameVersionCode(variant, defaultConfig) {
//    print "Debug: "+variant.buildType.name +" --"
    variant.outputs.each { output ->
        if (variant.buildType.name == android.buildTypes.debug.name) {
            if (output.zipAlign) {
                def file = output.outputFile
                output.outputFile = new File(file.parentFile, variant.buildType.name + "_app_v" + defaultConfig.versionName + "." + defaultConfig.versionCode + ".apk")
            }
        } else if (variant.buildType.name == android.buildTypes.release.name) {
            if (output.zipAlign) {
                def file = output.outputFile
                output.outputFile = new File(file.parentFile, variant.buildType.name + "_app_v" + defaultConfig.versionName + "." + defaultConfig.versionCode + ".apk")
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    apt "org.androidannotations:androidannotations:3.2"

    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.mcxiaoke.volley:library:1.0.11'
    compile 'org.androidannotations:androidannotations-api:3.2'
    compile 'com.mobsandgeeks:android-saripaar:2.0-SNAPSHOT'
    compile 'com.google.android.gms:play-services:7.0.0'
    compile 'com.google.maps.android:android-maps-utils:0.3.+'
    compile 'com.android.support:support-v4:22.0.0'
    compile 'org.jraf:android-switch-backport:1.4.0'
    compile 'com.android.support:recyclerview-v7:22.0.0'
}
